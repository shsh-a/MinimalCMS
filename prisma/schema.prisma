generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Chargepoints {
  chargepointId Int     @id @default(autoincrement())
  owner         String  @db.VarChar(40)
  address       String  @db.VarChar(250)
  coordinates   String? @db.VarChar(60)
  name          String? @db.VarChar(45)
  capacity      Float?  @db.Float
}

model ChargerAuditStatus {
  name          String          @id @db.VarChar(45)
  step          Float           @db.Float
  ChargerAudits ChargerAudits[]
}

model ChargerAudits {
  id                 Int                 @id
  customer           String?             @db.VarChar(45)
  installationCost   Float?              @db.Float
  electricalLoad     Float?              @db.Float
  addedAt            DateTime?           @db.Timestamp(0)
  lastUpdatedBy      String?             @db.VarChar(45)
  status             String?             @db.VarChar(45)
  ChargerAuditStatus ChargerAuditStatus? @relation(fields: [status], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "fk_audit_1")
  ChargerStations    ChargerStations?    @relation(fields: [customer], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "fk_audit_2")

  @@index([status], map: "fk_audit_1_idx")
  @@index([customer], map: "fk_audit_2_idx")
}

model ChargerFileTypes {
  id                   Int                   @id
  stage                String                @db.VarChar(45)
  name                 String                @db.VarChar(45)
  ChargerStationStatus ChargerStationStatus  @relation(fields: [stage], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "fk_fileType_1")
  ChargerFiles         ChargerFiles[]
  ChargerStationFiles  ChargerStationFiles[]

  @@index([stage], map: "fk_fileType_1_idx")
}

model ChargerFiles {
  id               Int               @id
  type             Int?
  chargerId        Int?
  addedAt          DateTime?         @db.Timestamp(0)
  lastUpdatedBy    DateTime?         @db.Timestamp(0)
  URL              String?           @db.VarChar(255)
  ChargerFileTypes ChargerFileTypes? @relation(fields: [type], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_files_10")

  @@index([type], map: "fk_files_1_idx")
}

model ChargerSessions {
  id            Int       @id @default(autoincrement())
  chargerId     Int
  location      String?   @db.VarChar(45)
  status        String?   @db.VarChar(45)
  startTime     String?   @db.VarChar(45)
  endTime       String?   @db.VarChar(45)
  sessionTime   String?   @db.VarChar(45)
  cost          String?   @db.VarChar(45)
  unitsConsumed String?   @db.VarChar(45)
  sessionStatus String?   @db.VarChar(45)
  errorCode     String?   @db.VarChar(45)
  errorMessage  String?   @db.VarChar(45)
  chargerSeshId String?   @db.VarChar(45)
  addedAt       DateTime? @default(now()) @db.DateTime(0)
}

model ChargerSlotBooking {
  day                 DateTime            @db.Date
  segmentId           Int
  chargerId           Int
  bookedBy            String              @db.VarChar(45)
  dept                String              @db.VarChar(45)
  ChargerSlotSegments ChargerSlotSegments @relation(fields: [segmentId], references: [id], onDelete: Cascade, map: "fk_ChargerSlotBooking_1")
  Chargers            Chargers            @relation(fields: [chargerId], references: [id], onDelete: Cascade, map: "fk_ChargerSlotBooking_2")

  @@id([day, segmentId, chargerId])
  @@index([segmentId], map: "fk_ChargerSlotBooking_1_idx")
  @@index([chargerId], map: "fk_ChargerSlotBooking_2_idx")
}

model ChargerSlotSegments {
  id                 Int                  @id @default(autoincrement())
  slotId             Int
  start              String?              @db.VarChar(45)
  end                String?              @db.VarChar(45)
  ChargerSlots       ChargerSlots         @relation(fields: [slotId], references: [id], onDelete: Cascade, map: "fk_ChargerSlotSegments_1")
  ChargerSlotBooking ChargerSlotBooking[]

  @@index([slotId], map: "fk_ChargerSlotSegments_1_idx")
}

model ChargerSlots {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(45)
  desc                String?               @db.VarChar(100)
  ChargerSlotSegments ChargerSlotSegments[]
  ChargerType         ChargerType[]
}

model ChargerStationFiles {
  id               Int               @id
  type             Int?
  stationName      String?           @db.VarChar(45)
  addedAt          DateTime?         @db.Timestamp(0)
  lastUpdatedBy    DateTime?         @db.Timestamp(0)
  URL              String?           @db.VarChar(255)
  ChargerStations  ChargerStations?  @relation(fields: [stationName], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "fk_chargerStationFiles_1")
  ChargerFileTypes ChargerFileTypes? @relation(fields: [type], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cs2")

  @@index([stationName], map: "fk_chargerStationFiles_1_idx")
  @@index([type], map: "fk_csfiles_1_idx")
}

model ChargerStationStatus {
  name             String             @id @db.VarChar(45)
  step             Float              @db.Float
  ChargerFileTypes ChargerFileTypes[]
}

model ChargerStations {
  name                String                @id @db.VarChar(45)
  address             String?               @db.VarChar(45)
  contactNu           String?               @db.VarChar(45)
  email               String?               @db.VarChar(45)
  availableLoad       Float?                @db.Float
  estimatedPeak       Float?                @db.Float
  chargerCount        Int?
  dataConnectivity    Boolean?
  status              String?               @db.VarChar(45)
  city                String?               @db.VarChar(45)
  ChargerAudits       ChargerAudits[]
  ChargerStationFiles ChargerStationFiles[]
  Chargers            Chargers[]
}

model ChargerType {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(45)
  desc         String?       @db.VarChar(100)
  slotId       Int?
  ChargerSlots ChargerSlots? @relation(fields: [slotId], references: [id], map: "fk_ChargerType_1")
  Chargers     Chargers[]

  @@index([slotId], map: "fk_ChargerType_1_idx")
}

model Chargers {
  id                 Int                  @id @default(autoincrement())
  station            String?              @db.VarChar(45)
  location           String?              @db.VarChar(45)
  address            String?              @db.VarChar(45)
  typeId             Int?
  ChargerType        ChargerType?         @relation(fields: [typeId], references: [id], map: "fk_Chargers_1")
  ChargerStations    ChargerStations?     @relation(fields: [station], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "fk_chargers_2")
  ChargerSlotBooking ChargerSlotBooking[]

  @@index([typeId], map: "fk_Chargers_1_idx")
  @@index([station], map: "fk_chargers_2_idx")
}

model FleetActivity {
  date              String              @db.VarChar(45)
  id                Int                 @id @default(autoincrement())
  vehicleId         String              @db.VarChar(45)
  driver            String              @db.VarChar(255)
  assignedBy        String              @db.VarChar(45)
  assignedAt        DateTime            @default(now()) @db.DateTime(0)
  origin            String              @db.VarChar(255)
  destination       String              @db.VarChar(255)
  customer          String              @db.VarChar(45)
  waypoints         String              @db.Text
  status            Int?                @default(0) @db.TinyInt
  routeId           String?             @default("0") @db.VarChar(45)
  vehicleNu         String              @db.VarChar(45)
  routeName         String?             @default("null") @db.VarChar(45)
  chargepoints      String?             @db.Text
  activityStart     DateTime?           @db.DateTime(0)
  startGiven        DateTime?           @db.DateTime(0)
  FleetVehicles     FleetVehicles       @relation(fields: [vehicleNu], references: [vehicleNu], onDelete: NoAction, map: "fk_FleetActivity_1")
  FleetActivityAuto FleetActivityAuto[]

  @@index([vehicleNu], map: "fk_FleetActivity_1_idx")
}

model FleetActivityAuto {
  id            Int           @id @default(autoincrement())
  activityId    Int
  FleetActivity FleetActivity @relation(fields: [activityId], references: [id], onDelete: Cascade, map: "fk_FleetActivityAuto_1")

  @@index([activityId], map: "fk_FleetActivityAuto_1_idx")
}

model FleetAlarms {
  driver        String    @db.VarChar(45)
  triggeredAt   DateTime? @default(now()) @db.DateTime(0)
  state         Boolean?  @default(true)
  vehicleId     String    @db.VarChar(45)
  vehicleNu     String?   @db.VarChar(45)
  lastUpdatedAt DateTime? @db.DateTime(0)
  lastUpdatedBy String?   @db.VarChar(45)
  deviceTime    DateTime? @db.DateTime(0)
  customer      String?   @db.VarChar(45)
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  msg           String?   @db.VarChar(768)
}

model FleetCustomerUsers {
  username       String         @unique(map: "username_UNIQUE") @db.VarChar(45)
  cid            Int
  Users          Users          @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction, map: "fk_FleetCustomerUsers_1")
  FleetCustomers FleetCustomers @relation(fields: [cid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FleetCustomerUsers_2")

  @@id([username, cid])
  @@index([cid], map: "fk_FleetCustomerUsers_2_idx")
}

model FleetCustomers {
  name               String?              @db.VarChar(45)
  createdAt          DateTime?            @default(now()) @db.Timestamp(0)
  addedBy            String?              @db.VarChar(45)
  GSTIN              String?              @db.VarChar(45)
  deployedAt         String?              @db.VarChar(45)
  vehicleCount       String?              @db.VarChar(45)
  id                 Int                  @id @default(autoincrement())
  oid                Int                  @default(1)
  Organisation       Organisation         @relation(fields: [oid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FleetCustomers_1")
  FleetCustomerUsers FleetCustomerUsers[]

  @@index([oid], map: "fk_FleetCustomers_1_idx")
}

model FleetDriverRatings {
  driver       String       @db.VarChar(45)
  day          DateTime     @db.Date
  grooming     Boolean?     @default(false)
  panctuality  Boolean?     @default(false)
  FleetDrivers FleetDrivers @relation(fields: [driver], references: [username], onDelete: NoAction, onUpdate: NoAction, map: "fk_FleetDriverRatings_1")

  @@id([driver, day])
}

model FleetDriverSessions {
  driver       String       @db.VarChar(45)
  checkIn      DateTime     @default(now()) @db.DateTime(0)
  checkOut     DateTime?    @db.DateTime(0)
  id           Int          @id @default(autoincrement())
  checkInLoc   String       @db.VarChar(255)
  checkOutLoc  String?      @db.VarChar(255)
  uniform      String?      @db.VarChar(5)
  img          String?      @db.VarChar(255)
  FleetDrivers FleetDrivers @relation(fields: [driver], references: [username], onDelete: NoAction, onUpdate: NoAction, map: "fk_driverSession_1")

  @@index([driver], map: "fk_driverSession_1_idx")
}

model FleetDrivers {
  username            String                @id @db.VarChar(45)
  photo               String?               @db.VarChar(255)
  dl                  String?               @db.VarChar(255)
  aadhar              String?               @db.VarChar(255)
  rewardPoints        Int?                  @default(0)
  status              Boolean?              @default(false)
  appData             String?               @db.VarChar(255)
  supervisor          String?               @db.VarChar(45)
  fname               String?               @db.VarChar(45)
  lname               String?               @db.VarChar(45)
  phoneNu             String?               @default("0") @db.VarChar(15)
  avgRating           Float?                @default(0) @db.Float
  Users               Users                 @relation(fields: [username], references: [username], onDelete: Cascade, map: "fk_driverProfile_1")
  FleetDriverRatings  FleetDriverRatings[]
  FleetDriverSessions FleetDriverSessions[]
}

model FleetInvoices {
  id           Int           @id @default(autoincrement())
  clientName   String        @db.VarChar(45)
  GSTIN        String        @db.VarChar(45)
  address      String        @db.VarChar(100)
  baseFare     Float?        @db.Float
  kmDriven     Float?        @db.Float
  slab         String?       @db.VarChar(45)
  discount     String?       @db.VarChar(45)
  invoiceURL   String?       @db.VarChar(255)
  date         DateTime?     @default(now()) @db.DateTime(0)
  oid          Int?          @default(1)
  Organisation Organisation? @relation(fields: [oid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FleetInvoices_1")

  @@index([oid], map: "fk_FleetInvoices_1_idx")
}

model FleetRouteStops {
  stopId              Int                 @id @default(autoincrement())
  routeId             String              @db.VarChar(50)
  waypointId          Int
  step                Int
  FleetRoutes         FleetRoutes         @relation(fields: [routeId], references: [routeId], onDelete: Cascade, map: "fkrouteid")
  FleetRouteWaypoints FleetRouteWaypoints @relation(fields: [waypointId], references: [waypointId], onDelete: Cascade, map: "fkwpid")

  @@index([routeId], map: "fkrouteid")
  @@index([waypointId], map: "fkwpid")
}

model FleetRouteWaypoints {
  waypointId      Int               @id @default(autoincrement())
  customer        String            @db.VarChar(40)
  address         String            @db.VarChar(250)
  coordinates     String?           @db.VarChar(60)
  name            String?           @db.VarChar(45)
  FleetRouteStops FleetRouteStops[]
}

model FleetRoutes {
  routeId         String            @id @db.VarChar(50)
  customer        String            @db.VarChar(40)
  createdAt       DateTime?         @default(now()) @db.DateTime(0)
  name            String            @db.VarChar(45)
  oid             Int               @default(1)
  Organisation    Organisation      @relation(fields: [oid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FleetRoutes_1")
  FleetRouteStops FleetRouteStops[]

  @@index([oid], map: "fk_FleetRoutes_1_idx")
}

model FleetTrips {
  tripId              String   @id @db.VarChar(50)
  imei                String   @db.VarChar(50)
  vehicleNumber       String   @db.VarChar(50)
  ontripTime          Float?   @db.Float
  startTimestamp      DateTime @db.DateTime(0)
  endTimestamp        DateTime @db.DateTime(0)
  location            String   @db.VarChar(1000)
  speedMax            Float?   @db.Float
  distance            Float?   @db.Float
  speedAverage        Float?   @db.Float
  roadData            String   @db.VarChar(10000)
  mapPathEncoded      String?  @db.MediumText
  electricityConsumed Float?   @db.Float
  driver              String?  @db.VarChar(45)
  rating              Float?   @db.Float
  checkpoints         String?  @db.MediumText
  customer            String?  @db.VarChar(45)
  vehicleClass        String?  @db.VarChar(10)
  totalTime           Float?   @db.Float
  routeId             String?  @db.VarChar(45)
  SSOC                Float?   @default(0) @db.Float
  ESOC                Float?   @default(0) @db.Float
  odoAtStart          Decimal? @default(0.0000) @db.Decimal(11, 4)
  odoAtEnd            Decimal? @default(0.0000) @db.Decimal(11, 4)
  startVolt           Decimal? @db.Decimal(11, 4)
  endVolt             Decimal? @db.Decimal(11, 4)
}

model FleetVehicleLedger {
  vehicleNumber   String @db.VarChar(40)
  totalDistance   Float? @default(0.000) @db.Float
  lastDayDistance Float? @default(0.000) @db.Float
  year            Int    @db.SmallInt
  monthName       String @db.VarChar(25)

  @@id([vehicleNumber, year, monthName])
}

model FleetVehicleRemarks {
  id            Int           @id @default(autoincrement())
  vehicleNu     String        @db.VarChar(45)
  remarks       String        @db.VarChar(200)
  addedAt       DateTime      @default(now()) @db.DateTime(0)
  addedBy       String        @db.VarChar(45)
  invoiceNu     String        @db.VarChar(45)
  invoiceURL    String        @db.VarChar(255)
  FleetVehicles FleetVehicles @relation(fields: [vehicleNu], references: [vehicleNu], onDelete: NoAction, map: "fk_VehicleServiceHistory_1")

  @@index([vehicleNu], map: "fk_VehicleServiceHistory_1")
}

model FleetVehicleTestReports {
  id            Int           @id @default(autoincrement())
  vehicleNu     String        @db.VarChar(45)
  url           String        @db.VarChar(255)
  addedAt       DateTime      @default(now()) @db.DateTime(0)
  addedBy       String        @db.VarChar(45)
  remarks       String?       @db.VarChar(760)
  FleetVehicles FleetVehicles @relation(fields: [vehicleNu], references: [vehicleNu], onDelete: NoAction, map: "fk_FleetVehicleTestReports_1")

  @@index([vehicleNu], map: "fk_FleetVehicleTestReports_1")
}

model FleetVehicles {
  id                      String                    @unique(map: "id_UNIQUE") @db.VarChar(40)
  vehicleClass            String                    @default("LCV") @db.VarChar(20)
  DoM                     String?                   @db.VarChar(45)
  capacity                String?                   @db.VarChar(45)
  vehicleNu               String                    @id @db.VarChar(45)
  chasisNu                String?                   @db.VarChar(45)
  engineNu                String?                   @db.VarChar(45)
  vehicleMake             String?                   @db.VarChar(45)
  profileURL              String?                   @db.VarChar(255)
  state                   Int?                      @default(1) @db.TinyInt
  lastUpdatedBy           String?                   @db.VarChar(45)
  comment                 String?                   @db.VarChar(255)
  addedAt                 DateTime?                 @default(now()) @db.Timestamp(0)
  lastUpdatedAt           DateTime?                 @db.Timestamp(0)
  moduleNu                String?                   @db.VarChar(45)
  simNu                   String?                   @db.VarChar(45)
  serial                  String?                   @db.VarChar(45)
  powerbank               String?                   @db.VarChar(45)
  oid                     Int                       @default(1)
  deviceId                Int?                      @default(0)
  Organisation            Organisation              @relation(fields: [oid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FleetVehicles_1")
  FleetActivity           FleetActivity[]
  FleetVehicleRemarks     FleetVehicleRemarks[]
  FleetVehicleTestReports FleetVehicleTestReports[]

  @@index([oid], map: "fk_FleetVehicles_1_idx")
}

model MailingList {
  id           Int          @id @default(autoincrement())
  email        String       @unique(map: "email_UNIQUE") @db.VarChar(45)
  addedBy      String       @db.VarChar(45)
  org          Int
  role         String       @db.VarChar(45)
  Users        Users        @relation(fields: [addedBy], references: [username], onDelete: NoAction, onUpdate: NoAction, map: "fk_MailingList_1")
  Roles        Roles        @relation(fields: [role], references: [role], onDelete: NoAction, onUpdate: NoAction, map: "fk_MailingList_2")
  Organisation Organisation @relation(fields: [org], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_MailingList_3")

  @@index([addedBy], map: "fk_MailingList_1_idx")
  @@index([role], map: "fk_MailingList_2_idx")
  @@index([org], map: "fk_MailingList_3_idx")
}

model Organisation {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(45)
  FleetCustomers FleetCustomers[]
  FleetInvoices  FleetInvoices[]
  FleetRoutes    FleetRoutes[]
  FleetVehicles  FleetVehicles[]
  MailingList    MailingList[]
  Users          Users[]
}

model RefreshTokenStates {
  username String    @db.VarChar(45)
  version  Int       @id @default(autoincrement())
  addedAt  DateTime? @default(now()) @db.Timestamp(0)
  Users    Users     @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: NoAction, map: "fk_refreshTokenStates_1")

  @@index([username], map: "fk_refreshTokenStates_1_idx")
}

model Roles {
  role        String        @id @db.VarChar(45)
  desc        String?       @db.VarChar(45)
  addedBy     String?       @db.VarChar(45)
  addedAt     DateTime?     @default(now()) @db.DateTime(0)
  MailingList MailingList[]
  Users       Users[]
}

model Tickets {
  id       String   @id @db.VarChar(60)
  username String   @db.VarChar(45)
  addedAt  DateTime @default(now()) @db.Timestamp(0)
  Users    Users    @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction, map: "fk_tickets_1")

  @@index([username], map: "fk_tickets_1_idx")
}

model Users {
  username           String               @id @unique(map: "username_UNIQUE") @db.VarChar(45)
  createdAt          DateTime?            @default(now()) @db.DateTime(0)
  role               String               @db.VarChar(45)
  FCMToken           String?              @db.VarChar(786)
  OTP                String?              @db.VarChar(8)
  OTPExpiry          DateTime?            @db.DateTime(0)
  disabled           Boolean?             @default(false)
  addedBy            String?              @db.VarChar(45)
  email              String?              @unique(map: "email_UNIQUE") @db.VarChar(60)
  phone              String?              @unique(map: "phone_UNIQUE") @db.VarChar(15)
  hash               String               @db.VarChar(200)
  org                Int?                 @default(1)
  Roles              Roles                @relation(fields: [role], references: [role], onDelete: NoAction, onUpdate: NoAction, map: "fk_Users_1")
  Organisation       Organisation?        @relation(fields: [org], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Users_2")
  FleetCustomerUsers FleetCustomerUsers?
  FleetDrivers       FleetDrivers?
  MailingList        MailingList[]
  RefreshTokenStates RefreshTokenStates[]
  Tickets            Tickets[]

  @@index([role], map: "fk_Users_1_idx")
  @@index([org], map: "fk_Users_2_idx")
}
