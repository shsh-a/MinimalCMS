generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model RefreshTokenStates {
  username String @db.VarChar(45)
  version  String @db.VarChar(45)
  Users    Users  @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: NoAction, map: "fk_refreshTokenStates_1")

  @@id([version, username])
  @@index([username], map: "fk_refreshTokenStates_1_idx")
}

model Roles {
  role            String            @id @db.VarChar(45)
  desc            String?           @db.VarChar(45)
  addedBy         String?           @db.VarChar(45)
  addedAt         DateTime?         @default(now()) @db.DateTime(0)
  RolePermissions RolePermissions[]
  Users           Users[]
}

model Users {
  username           String               @id @unique(map: "username_UNIQUE") @db.VarChar(45)
  createdAt          DateTime?            @default(now()) @db.DateTime(0)
  role               String               @db.VarChar(45)
  disabled           Boolean?             @default(false)
  addedBy            String?              @db.VarChar(45)
  email              String?              @unique(map: "email_UNIQUE") @db.VarChar(60)
  phone              String?              @unique(map: "phone_UNIQUE") @db.VarChar(15)
  hash               String               @db.VarChar(200)
  Roles              Roles                @relation(fields: [role], references: [role], onDelete: NoAction, onUpdate: NoAction, map: "fk_Users_1")
  RefreshTokenStates RefreshTokenStates[]

  @@index([role], map: "fk_Users_1_idx")
}

model ActionList {
  action          String            @id @db.VarChar(45)
  note            String?           @db.VarChar(45)
  RolePermissions RolePermissions[]
}

model RolePermissions {
  role       String     @db.VarChar(45)
  action     String     @db.VarChar(45)
  self       Int?       @default(0) @db.TinyInt
  Roles      Roles      @relation(fields: [role], references: [role], onDelete: Cascade, map: "fk_RolePermissions_1")
  ActionList ActionList @relation(fields: [action], references: [action], onDelete: NoAction, onUpdate: NoAction, map: "fk_RolePermissions_2")

  @@id([role, action])
  @@index([action], map: "fk_RolePermissions_2")
}
